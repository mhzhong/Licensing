using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using System.Threading.Tasks;

namespace DataAccessLayer.Interface
{
    public interface IGenericRepository<T> : IDisposable
        where T : class 
    {

        IEnumerable<T> GetAll();
        IEnumerable<T> Get(int id);
        IEnumerable<T> FindBy(Expression<Func<T, bool>> predicate);
        
        void Add(T entity);
        void AddRange(IEnumerable<T> entity);

        void Delete(T entity);
        void DeleteRange(IQueryable<T> entity);
        //void Update(T entity);
        //void Save();
    }
}
