using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using DataAccessLayer.Interface;
using DataLayer;
using DataLayer.Entities;

namespace DataAccessLayer
{
    public class ProductFamilyRepository: GenericRepository<ProductFamily>, IProductFamilyRepository
    {
        private LicensingContext _context;

        public ProductFamilyRepository(LicensingContext context)
            : base(context)
        {
            _context = context;
        }

        public LicensingContext Context
        {
            set { _context = value; }
        }
        public bool Insert(ProductFamily prodFamily)
        {
            Context.Entry(prodFamily).State = EntityState.Modified;
            Context.ProductFamilys.Add(prodFamily);
            if (Context.SaveChanges() > 0)
            {
                return true;
            }

            return false;
        }

        public bool Update(ProductFamily prodFam)
        {
            Context.Entry(prodFam).State = EntityState.Modified;
            Context.ProductFamilys.Attach(prodFam);
            Context.SaveChanges();
            return true;
        }

        public bool Delete(int id)
        {
            var prodFam = Context.ProductFamilys.FirstOrDefault(x => x.Id == id);
            if (prodFam != null)
            {
                Context.Entry(prodFam).State = EntityState.Modified;
                Context.ProductFamilys.Remove(prodFam);
                Context.SaveChanges();

                return true;
            }
            else
            {
                return false;
            }
        }
    }
}
