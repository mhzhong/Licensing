using System;
using System.Text;
using System.Collections.Generic;
using System.Linq;
using DataAccessLayer.Interface;
using DataLayer;
using DataLayer.Entities;
using NUnit.Framework;
using Moq;

namespace WebAPIControllerTest
{
    /// <summary>
    /// Summary description for RepositoryTest
    /// </summary>
    [TestFixture]
    public class RepositoryTest: MockRepository<ProductType>
    {
        private MockRepository<ProductType> _mockProductTyperepo; 

        public RepositoryTest()
        {
            _mockProductTyperepo = new MockRepository<ProductType>();
            _mockProductTyperepo._context = new List<ProductType>(){new ProductType(){
                            Id = 1,
                            Type = "BVMS Test",
                        },
                         new ProductType
                        {
                           Id = 2,
                           Type = "CDR Test",
                        },
                        new ProductType
                        {
                            Id = 3,
                            Type = "VIR Test",
                        }
            };

            // = new MockRepository<License>();
        }

        [SetUp]
        public void SetUp()
        {
        }

        #region Additional test attributes
        //
        // You can use the following additional attributes as you write your tests:
        //
        // Use ClassInitialize to run code before running the first test in the class
        // [ClassInitialize()]
        // public static void MyClassInitialize(TestContext testContext) { }
        //
        // Use ClassCleanup to run code after all tests in a class have run
        // [ClassCleanup()]
        // public static void MyClassCleanup() { }
        //
        // Use TestInitialize to run code before running each test 
        // [TestInitialize()]
        // public void MyTestInitialize() { }
        //
        // Use TestCleanup to run code after each test has run
        // [TestCleanup()]
        // public void MyTestCleanup() { }
        //
        #endregion

        [Test]
        public void Can_GetAll_ProductType_Test()
        {
            var allTypes = _mockProductTyperepo.GetAll();
            var actualResult = allTypes.Count();
            Assert.AreEqual(3,actualResult);
        }

        [Test]
        public void Can_Insert_ProductType_Test()
        {
            var newType = new ProductType()
            {
                Id = 3,
                Type = "Divor Test",
            };
            var result = _mockProductTyperepo.Insert(newType);
            Assert.IsNotNull(result);
        }
    }
}
